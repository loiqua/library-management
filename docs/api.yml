openapi: 3.0.3
info:
  title: Library API
  version: 1.3.0
  description: STD22001
servers:
  - url: https://library.com
tags:
  - name: Books
  - name: Authors
paths:
  /books:
    get:
      tags:
        - Books
      summary: Get all books
      description: The returned books are ordered by updated datetime.
      operationId: getBooks
      parameters:
        - $ref: "#/components/parameters/queryPagination"
        - in: query
          name: bookName
          description: Filter return books by given name
          required: false
          schema:
            type: string
        - in: query
          name: releaseDateMin
          description: If `releaseDateMax` is not provided, `releaseDateMin` is ignored.
          schema:
            type: string
            format: date
          required: false
        - in: query
          name: releaseDateMax
          description: If `releaseDateMin` is not provided, `releaseDateMax` is ignored.
          schema:
            type: string
            format: date
          required: false
      responses:
        200:
          description: The list of filtered books
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response200"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response400"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response403"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response500"
    put:
      tags:
        - Books
      summary: Create or update a list of books
      operationId: crupdateBooks
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/CrupdateBook"
      responses:
        200:
          description: The list of created or updated books
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response200"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response400"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response403"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response500"
  /books/import:
    post:
      tags:
        - Books
      summary: Import books from Excel or JSON
      operationId: importBooks
      requestBody:
        content:
          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
          application/json:
            schema:
              $ref: "#/components/schemas/ImportBook"
      responses:
        200:
          description: The list of imported books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
  /authors:
    get:
      summary: Get all authors
      operationId: getAuthors
      tags:
        - Authors
      parameters:
        - $ref: "#/components/parameters/queryPagination"
        - in: query
          name: authorName
          description: Filter returned authors by given name.
          schema:
            type: string
          required: false
      responses:
        200:
          description: The list of filtered authors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response200"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response400"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response403"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response500"
    put:
      summary: Create or update authors
      operationId: crupdateAuthors
      tags:
        - Authors
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Author"
      responses:
        200:
          description: The list of created or updated authors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response200"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response400"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response403"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response500"
  /authors/import:
    post:
      tags:
        - Authors
      summary: Import authors from Excel or JSON
      operationId: importAuthors
      requestBody:
        content:
          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
          application/json:
            schema:
              $ref: "#/components/schemas/ImportAuthor"
      responses:
        200:
          description: The list of imported authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Author"

components:
  parameters:
    queryPagination:
      name: page
      in: query
      description: Page number for pagination (default: 1)
      schema:
        type: integer
        default: 1
        required: false
    - name: pageSize
      in: query
      description: Number of items per page (default: 50)
      schema:
        type: integer
        default: 50
        required: false
    pathPagination:
      name: page
      in: path
      description: Page number for pagination (default: 1)
      schema:
        type: integer
        default: 1
        required: false
    - name: pageSize
      in: path
      description: Number of items per page (default: 50)
      schema:
        type: integer
        default: 50
        required: false
  schemas:
    Response:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/ResponseStatus"
        body:
          type: object

    ResponseStatus:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string

    Response200:
      allOf:
        - $ref: "#/components/schemas/Response"
        - type: object
        - properties:
            data:
              type: object

    Response400:
      allOf:
        - $ref: "#/components/schemas/Response"
        - type: object
        - properties:
            errors:
              type: array

    Response403:
      allOf:
        - $ref: "#/components/schemas/Response"
        - type: object
        - properties:
            message:
              type: string

    Response500:
      allOf:
        - $ref: "#/components/schemas/Response"
        - type: object
        - properties:
            error:
              type: string

    Book:
      type: object
      properties:
        id:
          type: string
        bookName:
          type: string
        author:
          $ref: "#/components/schemas/Author"
        pageNumbers:
          type: integer
        topic:
          type: string
          enum:
            - ROMANCE
            - COMEDY
            - OTHER
        releaseDate:
          type: string
          format: date

    CrupdateBook:
      allOf:
        - $ref: "#/components/schemas/Book"
        - type: object
        - properties:
            author:
              type: string
              nullable: true
        - required:
          - author

    Author:
      type: object
      properties:
        id:
          type: string
        authorName:
          type: string
        sex:
          $ref: "#/components/schemas/Sex"

    Sex:
      type: string
      enum:
        - M
        - F

    ImportAuthor:
      oneOf:
        - $ref: "#/components/schemas/ExcelImportAuthor"
        - $ref: "#/components/schemas/JSONImportAuthor"
    
    ExcelImportAuthor:
      type: object
      properties:
        authorName:
          type: string
        sex:
          $ref: "#/components/schemas/Sex"
    
    JSONImportAuthor:
      type: object
      properties:
        authorName:
          type: string
        sex:
          $ref: "#/components/schemas/Sex"
    
    ImportBook:
      oneOf:
        - $ref: "#/components/schemas/ExcelImportBook"
        - $ref: "#/components/schemas/JSONImportBook"
    
    ExcelImportBook:
      type: object
      properties:
        bookName:
          type: string
        author:
          type: string
        pageNumbers:
          type: integer
        topic:
          type: string
          enum:
            - ROMANCE
            - COMEDY
            - OTHER
        releaseDate:
          type: string
          format: date
        idAuthor:
          type: string
    
    JSONImportBook:
      type: object
      properties:
        bookName:
          type: string
        author:
          type: string
        pageNumbers:
          type: integer
        topic:
          type: string
          enum:
            - ROMANCE
            - COMEDY
            - OTHER
        releaseDate:
          type: string
          format: date
        idAuthor:
          type: string
